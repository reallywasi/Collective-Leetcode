

1. SORT COLORS 
Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.

We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.

You must solve this problem without using the library's sort function.

 

Example 1:

Input: nums = [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]
Example 2:

Input: nums = [2,0,1]
Output: [0,1,2]


______________________________________________________________________________________________________________________________________________


class Solution {
public:
    void sortColors(vector<int>& nums) {
        int zero_count=0;
        int one_count=0;
        int two_count=0;
        int j=0;
  for (int i = 0; i < nums.size(); i++) {
        switch (nums[i]) {
            case 0:
                zero_count++;
                break;
            case 1:
                one_count++;
                break;
            case 2:
                two_count++;
                break;
        }
    }   
     while (zero_count > 0) {
        nums[j++] = 0;
        zero_count--;
    }
   while (one_count > 0) {
        nums[j++] = 1;
        one_count--;
    }
    while (two_count > 0) {
        nums[j++] = 2;
        two_count--;
    }


    }
};

______________________________________________________________________________________________________________________________________________
##############################################################################################################################################
______________________________________________________________________________________________________________________________________________



