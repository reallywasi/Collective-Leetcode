class Solution {
public:
    int f(vector<vector<int>>& arr, int day, int last, vector<vector<int>>&dp) {
        if (day == 0) {
            int maxi = 0;
            for (int task = 0; task < 3; task++) {
                if (task != last) {
                    maxi = max(maxi, arr[day][task]);
                }
            }
            return maxi;
        }


if(dp[day][last]!=-1) return dp[day][last];
        int maxi = 0;
        for (int task = 0; task < 3; task++) {
            if (task != last) {
                int points = arr[day][task] + f(arr, day - 1, task,dp);
                maxi = max(maxi, points);
            }
        }
        return dp[day][last]=maxi;
    }

    int maximumPoints(vector<vector<int>>& arr, int n) {
        // Start with day n-1 and with no last task (indicated by 3)
        vector<vector<int>>dp(n,vector<int>(4,-1));
        
        return f(arr, n - 1, 3,dp);
    }
};
