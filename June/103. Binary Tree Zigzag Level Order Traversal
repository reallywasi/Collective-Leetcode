
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>>result;
        if(root==NULL)
        {
            return result;
        }
        queue<TreeNode*>q;
        q.push(root);

        bool left_to_right=true;
        while(!q.empty())
        {
int s =q.size();
vector<int>ans(s);
for(int i=0;i<s;i++)
{
TreeNode* n=q.front();
q.pop();
 int index = left_to_right? i : (s - 1 - i);
ans[index] = n->val;

if(n->left)
{
    q.push(n->left);
}
if(n->right)
{
    q.push(n->right);
}

}
            left_to_right = !left_to_right;
            result.push_back(ans);

        }
        return result;
    }
};
